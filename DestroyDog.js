javascript:

var dd_canvas;
var dd_ctx;
var dd_head_color = "#af5300";
var dd_jaw_color = "#804000";
var dd_ear_color = "#703d00";
var dd_inner_ear_color = "#73450d";
var dd_tongue_length = 5;
var dd_time = 0.0;
var dd_frame_delta = 0.01;
var dd_target_element = 0;

function dd_main()
{
	var canvasHTML = '<canvas id="dd_canvas" style="background:transparent;position:fixed;z-index:999999999;top:0;left:0;right:0;bottom:0;"></canvas>';
	if (document.domain == "www.youtube.com")
	{
		document.getElementById("skip-navigation").innerHTML += canvasHTML;
	}
	else
	{
		document.body.innerHTML += canvasHTML;
	}
	dd_canvas = document.getElementById("dd_canvas");
	dd_ctx = dd_canvas.getContext("2d");
	dd_canvas.style.width = window.innerWidth;
	dd_canvas.style.height = window.innerHeight;
	dd_canvas.width = window.innerWidth;
	dd_canvas.height = window.innerHeight;
	setInterval(dd_frame, dd_frame_delta * 1000.0);
}

function dd_update()
{
	dd_ctx.clearRect(0, 0, dd_canvas.width, dd_canvas.height);
	dd_draw_body();
	dd_draw_head();
}

function dd_draw_arc(x, y, radius, from, to, color)
{
	dd_ctx.fillStyle = color;
	dd_ctx.strokeStyle = color;
	dd_ctx.moveTo(x + dd_canvas.width / 2, y + dd_canvas.height / 2);
	dd_ctx.beginPath();
	dd_ctx.lineTo(Math.cos(from) * radius + x + dd_canvas.width / 2, Math.sin(from) * radius + y + dd_canvas.height / 2);
	dd_ctx.lineTo(Math.cos(to) * radius + x + dd_canvas.width / 2, Math.sin(to) * radius + y + dd_canvas.height / 2);
	dd_ctx.lineTo(x + dd_canvas.width / 2, y + dd_canvas.height / 2);
	dd_ctx.closePath();
	dd_ctx.arc(x + dd_canvas.width / 2, y + dd_canvas.height / 2, radius, from, to, false);
	dd_ctx.stroke();
	dd_ctx.fill();
}

function dd_draw_circle(x, y, radius, color)
{
	dd_draw_arc(x, y, radius, 0, Math.PI * 2, color);
}

function dd_draw_rect(x, y, width, height, color)
{
	dd_ctx.fillStyle = color;
	dd_ctx.strokeStyle = color;
	dd_ctx.fillRect(x + dd_canvas.width / 2, y + dd_canvas.height / 2, width, height);
	dd_ctx.strokeRect(x + dd_canvas.width / 2, y + dd_canvas.height / 2, width, height);
}

function dd_draw_rect_centered(x, y, width, height, color, filled = true)
{
	dd_draw_rect(x - width / 2, y - height / 2, width, height, color, filled);
}

function dd_draw_polygon(points,color)
{
	dd_ctx.fillStyle = color;
	dd_ctx.strokeStyle = color;
	dd_ctx.moveTo(points[0][0] + dd_canvas.width / 2, points[0][1] + dd_canvas.height / 2);
	dd_ctx.beginPath();
	
	for(let i = 0; i < points.length; i++)
	{
		dd_ctx.lineTo(points[i][0] + dd_canvas.width / 2, points[i][1] + dd_canvas.height / 2);
	}
	
	dd_ctx.closePath();
	dd_ctx.stroke();
	dd_ctx.fill();
}

function dd_draw_body()
{
	var floor = Math.sin(1) * 100 + 70;
	var edge = Math.cos(1) * 100 - 10;
	
	for(let side = 1; side >= -1; side -= 2)
	{
		dd_draw_circle((edge + 30) * side, floor - 20, 12, dd_head_color);
		dd_draw_circle((edge + 30 - 10) * side, floor - 20, 15, dd_head_color);
	}
	
	dd_draw_arc(10, 70, 100, -1 + Math.PI, 1 + Math.PI,dd_inner_ear_color);
	dd_draw_arc(-10, 70, 100, -1, 1, dd_inner_ear_color);
	dd_draw_rect_centered(0, Math.sin(1) * 50 + 70, Math.cos(1) * 200 - 20, Math.sin(1) * 100, dd_inner_ear_color);
	
	for(let side = 1; side >= -1; side -= 2)
	{
		dd_draw_circle(edge * side, floor, 12, dd_head_color);
		dd_draw_circle((edge-10) * side, floor, 15, dd_head_color);
		dd_draw_circle((edge-20) * side, floor, 12, dd_head_color);
	}
}

function dd_draw_head()
{
	dd_draw_polygon([ [60,-70],[-60,-70],[-95,0],[95,0] ], dd_ear_color);
	
	for(let side = 1; side >= -1; side -= 2)
	{
		dd_draw_circle(55 * side, 0, 40, dd_ear_color);
		dd_draw_circle(30 * side, -70, 30, dd_ear_color);
	}
	
	dd_draw_arc(0, -32, 80, Math.PI * .35, Math.PI * .65, dd_jaw_color);
	dd_draw_rect_centered(0, (40 + dd_tongue_length) / 2, 30, 40 + dd_tongue_length, "pink");
	dd_draw_circle(0, 40 + dd_tongue_length, 15, "pink");
	dd_draw_rect_centered(0, (40 + dd_tongue_length + 5) / 2, 2, 40 + dd_tongue_length + 5, "#ff7878");
	dd_draw_circle(30, 0, 40, dd_head_color);
	dd_draw_circle(-30, 0, 40, dd_head_color);
	dd_draw_polygon([[-70,0], [70,0], [50,-60], [-50,-60]], dd_head_color);
	dd_draw_circle(0, -50, 50, dd_head_color);
	
	for(let side=1; side >= -1; side -= 2)
	{
		dd_draw_circle(20 * side, -50, 20, "black");
		dd_draw_circle(20 * side, -50, 18, "white");
		if(dd_target_element == 0)
		{
			dd_draw_circle(20 * side, -50, 10, "black");
		}
		else
		{
			dd_draw_circle(20 * side, -50, 10, "red");
			var rect = dd_target_element.getBoundingClientRect();
			var target_point_x = (Math.random() * 2 - 1) * dd_canvas.width / 2;
			var target_point_y = (Math.random() * 2 - 1) * dd_canvas.height / 2;
			dd_draw_polygon([ [20 * side, -40], [20 * side, -60], [target_point_x, target_point_y] ]);
		}
	}
	dd_draw_circle(0, -20, 20, "black");
}

function dd_frame()
{
	dd_time += dd_frame_delta;
	if (document.getElementsByTagName("*").length !=0 && dd_time > 2)
	{
		dd_laser();
	}
	dd_update();
}

function dd_laser()
{
	var elements = document.getElementsByTagName("*");
	var count = 0;
	var bad;
	do
	{
		dd_target_element = elements[ Math.floor(Math.random()*(elements.length-1)) ];
		count += 1;
		bad = (dd_target_element == dd_canvas || dd_target_element.childElementCount != 0 || dd_target_element.nodeName == "STYLE");
	} while (bad && count < 100);
	
	if (bad)
	{
		dd_target_element = 0;
	}
	else
	{
		dd_target_element.remove();
		if (Math.floor(dd_time/dd_frame_delta) % 4 == 0)
		{
			var beep = new Audio("data:audio/wav;base64,
			beep.play();
		}
	}
}

if (confirm("Launch DestroyDog?"))
{
	dd_main();
}